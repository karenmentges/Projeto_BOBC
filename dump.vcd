$date
	Wed May 12 12:20:21 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! LED $end
$var wire 16 " Resultado [15:0] $end
$var reg 1 # ck $end
$var reg 1 $ inicio $end
$var reg 1 % pronto $end
$var reg 1 & rst $end
$scope module p $end
$var wire 16 ' A [15:0] $end
$var wire 16 ( B [15:0] $end
$var wire 16 ) C [15:0] $end
$var wire 1 ! LED $end
$var wire 16 * X [15:0] $end
$var wire 1 # ck $end
$var wire 1 $ inicio $end
$var wire 1 % pronto $end
$var wire 1 & rst $end
$var wire 2 + m2 [1:0] $end
$var wire 2 , m1 [1:0] $end
$var wire 2 - m0 [1:0] $end
$var wire 1 . lx $end
$var wire 1 / ls $end
$var wire 1 0 lh $end
$var wire 1 1 h $end
$var wire 1 2 done $end
$var wire 16 3 Resultado [15:0] $end
$scope module c $end
$var wire 1 # ck $end
$var wire 1 $ inicio $end
$var wire 1 % pronto $end
$var wire 1 & rst $end
$var reg 1 2 done $end
$var reg 1 1 h $end
$var reg 1 0 lh $end
$var reg 1 / ls $end
$var reg 1 . lx $end
$var reg 2 4 m0 [1:0] $end
$var reg 2 5 m1 [1:0] $end
$var reg 2 6 m2 [1:0] $end
$var reg 4 7 state [3:0] $end
$upscope $end
$scope module op $end
$var wire 16 8 A [15:0] $end
$var wire 16 9 B [15:0] $end
$var wire 16 : C [15:0] $end
$var wire 16 ; NX [15:0] $end
$var wire 16 < Resultado [15:0] $end
$var wire 1 # ck $end
$var wire 1 2 done $end
$var wire 1 1 h $end
$var wire 1 0 lh $end
$var wire 1 / ls $end
$var wire 1 . lx $end
$var wire 2 = m0 [1:0] $end
$var wire 2 > m1 [1:0] $end
$var wire 2 ? m2 [1:0] $end
$var wire 1 & rst $end
$var wire 16 @ res [15:0] $end
$var wire 16 A outm2 [15:0] $end
$var wire 16 B outm1 [15:0] $end
$var wire 16 C outm0 [15:0] $end
$var wire 16 D RegX [15:0] $end
$var wire 16 E RegS [15:0] $end
$var wire 16 F RegH [15:0] $end
$scope module M0 $end
$var wire 16 G a [15:0] $end
$var wire 16 H b [15:0] $end
$var wire 16 I c [15:0] $end
$var wire 16 J d [15:0] $end
$var wire 2 K sel [1:0] $end
$var reg 16 L out [15:0] $end
$upscope $end
$scope module M1 $end
$var wire 16 M a [15:0] $end
$var wire 2 N sel [1:0] $end
$var wire 16 O d [15:0] $end
$var wire 16 P c [15:0] $end
$var wire 16 Q b [15:0] $end
$var reg 16 R out [15:0] $end
$upscope $end
$scope module M2 $end
$var wire 16 S b [15:0] $end
$var wire 2 T sel [1:0] $end
$var wire 16 U d [15:0] $end
$var wire 16 V c [15:0] $end
$var wire 16 W a [15:0] $end
$var reg 16 X out [15:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 # ck $end
$var wire 1 . l $end
$var wire 1 & rst $end
$var wire 16 Y v [15:0] $end
$var reg 16 Z r [15:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 # ck $end
$var wire 1 / l $end
$var wire 1 & rst $end
$var wire 16 [ v [15:0] $end
$var reg 16 \ r [15:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 # ck $end
$var wire 1 0 l $end
$var wire 1 & rst $end
$var wire 16 ] v [15:0] $end
$var reg 16 ^ r [15:0] $end
$upscope $end
$scope module U $end
$var wire 1 1 h $end
$var wire 16 _ v1 [15:0] $end
$var wire 16 ` v2 [15:0] $end
$var wire 16 a r [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx a
bx `
b0 _
bx ^
bx ]
bx \
bx [
bx Z
b10111 Y
bx X
bx W
bx V
bx U
b0 T
b0 S
b0 R
bx Q
bx P
bx O
b0 N
b0 M
b0 L
b0 K
b1001100100110 J
b101001101 I
b100110 H
b0 G
bx F
bx E
bx D
b0 C
b0 B
bx A
bx @
b0 ?
b0 >
b0 =
bx <
b10111 ;
b1001100100110 :
b101001101 9
b100110 8
b0 7
b0 6
b0 5
b0 4
bx 3
02
01
00
0/
0.
b0 -
b0 ,
b0 +
b10111 *
b1001100100110 )
b101001101 (
b100110 '
0&
0%
0$
0#
bx "
z!
$end
#1
1#
#2
0#
1$
#3
b1 7
1#
#4
0#
0$
#5
b100110 B
b100110 R
b100110 _
b100110 C
b100110 L
b100110 M
b100110 S
b10 7
11
b1 -
b1 4
b1 =
b1 K
1.
1#
#6
0#
#7
b11 7
10
0.
b1101101010 @
b1101101010 [
b1101101010 ]
b1101101010 a
b10111 A
b10111 X
b10111 `
b10111 D
b10111 Q
b10111 W
b10111 Z
1#
#8
0#
#9
b101001101 B
b101001101 R
b101001101 _
b10010110111 @
b10010110111 [
b10010110111 ]
b10010110111 a
b1101101010 A
b1101101010 X
b1101101010 `
b101001101 C
b101001101 L
b101001101 M
b101001101 S
b100 7
00
01
b11 +
b11 6
b11 ?
b11 T
b10 -
b10 4
b10 =
b10 K
b1101101010 F
b1101101010 O
b1101101010 U
b1101101010 ^
1#
#10
0#
#11
b101 7
10
1#
#12
0#
#13
b10111 B
b10111 R
b10111 _
b0 C
b0 L
b0 M
b0 S
b110 7
00
11
b1 ,
b1 5
b1 >
b1 N
b0 -
b0 4
b0 =
b0 K
b110110001110001 @
b110110001110001 [
b110110001110001 ]
b110110001110001 a
b10010110111 A
b10010110111 X
b10010110111 `
b10010110111 F
b10010110111 O
b10010110111 U
b10010110111 ^
1#
#14
0#
#15
b111 7
10
1#
#16
0#
#17
b1001100100110 B
b1001100100110 R
b1001100100110 _
b1001100100110 C
b1001100100110 L
b1001100100110 M
b1001100100110 S
b1000 7
00
01
b0 ,
b0 5
b0 >
b0 N
b11 -
b11 4
b11 =
b11 K
b111111110010111 @
b111111110010111 [
b111111110010111 ]
b111111110010111 a
b110110001110001 A
b110110001110001 X
b110110001110001 `
b110110001110001 F
b110110001110001 O
b110110001110001 U
b110110001110001 ^
1#
#18
0#
#19
b1001 7
1/
1#
#20
0#
#21
b10111 @
b10111 [
b10111 ]
b10111 a
b0 B
b0 R
b0 _
b10111 A
b10111 X
b10111 `
b0 C
b0 L
b0 M
b0 S
b0 7
12
0/
b0 +
b0 6
b0 ?
b0 T
b0 -
b0 4
b0 =
b0 K
b111111110010111 "
b111111110010111 3
b111111110010111 <
b111111110010111 E
b111111110010111 P
b111111110010111 V
b111111110010111 \
1#
#22
0#
1%
#23
02
1#
#24
0#
1&
0%
