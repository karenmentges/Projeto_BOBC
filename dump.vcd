$date
	Wed May 12 20:42:19 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! pronto $end
$var wire 1 " overflow $end
$var wire 16 # Resultado [15:0] $end
$var reg 1 $ ck $end
$var reg 1 % inicio $end
$var reg 1 & rst $end
$scope module p $end
$var wire 16 ' A [15:0] $end
$var wire 16 ( B [15:0] $end
$var wire 16 ) C [15:0] $end
$var wire 16 * X [15:0] $end
$var wire 1 $ ck $end
$var wire 1 % inicio $end
$var wire 1 & rst $end
$var wire 1 ! pronto $end
$var wire 1 " overflow $end
$var wire 2 + m2 [1:0] $end
$var wire 2 , m1 [1:0] $end
$var wire 2 - m0 [1:0] $end
$var wire 1 . lx $end
$var wire 1 / ls $end
$var wire 1 0 lh $end
$var wire 1 1 h $end
$var wire 16 2 Resultado [15:0] $end
$scope module c $end
$var wire 1 $ ck $end
$var wire 1 % inicio $end
$var wire 1 & rst $end
$var reg 1 1 h $end
$var reg 1 0 lh $end
$var reg 1 / ls $end
$var reg 1 . lx $end
$var reg 2 3 m0 [1:0] $end
$var reg 2 4 m1 [1:0] $end
$var reg 2 5 m2 [1:0] $end
$var reg 1 ! pronto $end
$var reg 4 6 state [3:0] $end
$upscope $end
$scope module op $end
$var wire 16 7 A [15:0] $end
$var wire 16 8 B [15:0] $end
$var wire 16 9 C [15:0] $end
$var wire 16 : NX [15:0] $end
$var wire 16 ; Resultado [15:0] $end
$var wire 1 $ ck $end
$var wire 1 1 h $end
$var wire 1 0 lh $end
$var wire 1 / ls $end
$var wire 1 . lx $end
$var wire 2 < m0 [1:0] $end
$var wire 2 = m1 [1:0] $end
$var wire 2 > m2 [1:0] $end
$var wire 1 ! pronto $end
$var wire 1 & rst $end
$var wire 16 ? res [15:0] $end
$var wire 1 " overflow $end
$var wire 16 @ outm2 [15:0] $end
$var wire 16 A outm1 [15:0] $end
$var wire 16 B outm0 [15:0] $end
$var wire 16 C RegX [15:0] $end
$var wire 16 D RegS [15:0] $end
$var wire 16 E RegH [15:0] $end
$scope module M0 $end
$var wire 16 F a [15:0] $end
$var wire 16 G b [15:0] $end
$var wire 16 H c [15:0] $end
$var wire 16 I d [15:0] $end
$var wire 2 J sel [1:0] $end
$var reg 16 K out [15:0] $end
$upscope $end
$scope module M1 $end
$var wire 16 L a [15:0] $end
$var wire 2 M sel [1:0] $end
$var wire 16 N d [15:0] $end
$var wire 16 O c [15:0] $end
$var wire 16 P b [15:0] $end
$var reg 16 Q out [15:0] $end
$upscope $end
$scope module M2 $end
$var wire 16 R b [15:0] $end
$var wire 2 S sel [1:0] $end
$var wire 16 T d [15:0] $end
$var wire 16 U c [15:0] $end
$var wire 16 V a [15:0] $end
$var reg 16 W out [15:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 $ ck $end
$var wire 1 . l $end
$var wire 1 & rst $end
$var wire 16 X v [15:0] $end
$var reg 16 Y r [15:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 $ ck $end
$var wire 1 / l $end
$var wire 1 & rst $end
$var wire 16 Z v [15:0] $end
$var reg 16 [ r [15:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 $ ck $end
$var wire 1 0 l $end
$var wire 1 & rst $end
$var wire 16 \ v [15:0] $end
$var reg 16 ] r [15:0] $end
$upscope $end
$scope module U $end
$var wire 1 1 h $end
$var wire 16 ^ v1 [15:0] $end
$var wire 16 _ v2 [15:0] $end
$var reg 1 " overflow $end
$var reg 16 ` r [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx `
bx _
b0 ^
bx ]
bx \
bx [
bx Z
bx Y
b10111 X
bx W
bx V
bx U
bx T
b0 S
b0 R
b0 Q
bx P
bx O
bx N
b0 M
b0 L
b0 K
b0 J
b1001001100100110 I
b1000000101001101 H
b100110 G
b0 F
bx E
bx D
bx C
b0 B
b0 A
bx @
bx ?
b0 >
b0 =
b0 <
bx ;
b10111 :
b1001001100100110 9
b1000000101001101 8
b100110 7
b0 6
b0 5
b0 4
b0 3
bx 2
01
00
0/
0.
b0 -
b0 ,
b0 +
b10111 *
b1001001100100110 )
b1000000101001101 (
b100110 '
0&
0%
0$
bx #
x"
0!
$end
#1
1$
#2
0$
1%
#3
b1 6
1$
#4
0$
0%
#5
b100110 A
b100110 Q
b100110 ^
b100110 B
b100110 K
b100110 L
b100110 R
b10 6
11
b1 -
b1 3
b1 <
b1 J
1.
1$
#6
0$
#7
b11 6
10
0.
0"
b1101101010 ?
b1101101010 Z
b1101101010 \
b1101101010 `
b10111 @
b10111 W
b10111 _
b10111 C
b10111 P
b10111 V
b10111 Y
1$
#8
0$
#9
b1000000101001101 A
b1000000101001101 Q
b1000000101001101 ^
b1000010010110111 ?
b1000010010110111 Z
b1000010010110111 \
b1000010010110111 `
b1101101010 @
b1101101010 W
b1101101010 _
b1000000101001101 B
b1000000101001101 K
b1000000101001101 L
b1000000101001101 R
b100 6
00
01
b11 +
b11 5
b11 >
b11 S
b10 -
b10 3
b10 <
b10 J
b1101101010 E
b1101101010 N
b1101101010 T
b1101101010 ]
1$
#10
0$
#11
b101 6
10
1$
#12
0$
#13
b10111 A
b10111 Q
b10111 ^
b0 B
b0 K
b0 L
b0 R
b110 6
00
11
b1 ,
b1 4
b1 =
b1 M
b0 -
b0 3
b0 <
b0 J
1"
b1110110001110001 ?
b1110110001110001 Z
b1110110001110001 \
b1110110001110001 `
b1000010010110111 @
b1000010010110111 W
b1000010010110111 _
b1000010010110111 E
b1000010010110111 N
b1000010010110111 T
b1000010010110111 ]
1$
#14
0$
#15
b111 6
10
1$
#16
0$
#17
b1001001100100110 A
b1001001100100110 Q
b1001001100100110 ^
b1001001100100110 B
b1001001100100110 K
b1001001100100110 L
b1001001100100110 R
b1000 6
00
01
b0 ,
b0 4
b0 =
b0 M
b11 -
b11 3
b11 <
b11 J
b111111110010111 ?
b111111110010111 Z
b111111110010111 \
b111111110010111 `
b1110110001110001 @
b1110110001110001 W
b1110110001110001 _
b1110110001110001 E
b1110110001110001 N
b1110110001110001 T
b1110110001110001 ]
1$
#18
0$
#19
b1001 6
1/
1$
#20
0$
#21
0"
b10111 ?
b10111 Z
b10111 \
b10111 `
b0 A
b0 Q
b0 ^
b10111 @
b10111 W
b10111 _
b0 B
b0 K
b0 L
b0 R
b0 6
1!
0/
b0 +
b0 5
b0 >
b0 S
b0 -
b0 3
b0 <
b0 J
b111111110010111 #
b111111110010111 2
b111111110010111 ;
b111111110010111 D
b111111110010111 O
b111111110010111 U
b111111110010111 [
1$
#22
0$
#23
0!
1$
#24
0$
#25
1$
#26
0$
#27
1$
#28
0$
#29
b0 ?
b0 Z
b0 \
b0 `
b0 @
b0 W
b0 _
b0 C
b0 P
b0 V
b0 Y
b0 #
b0 2
b0 ;
b0 D
b0 O
b0 U
b0 [
b0 E
b0 N
b0 T
b0 ]
1$
1&
#30
0$
#31
1$
0&
